name: Build and Publish Docker Image

on:
  workflow_dispatch:
      inputs:
        version:
          description: 'Optional version tag (e.g. v1.0.0)'
          required: false
          default: ''

env:
  PRIVATE_REPO: kubendoscope/hub
  IMAGE_NAME: hub

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: "KubeEndoscope Upload"

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PA_TOKEN }}  # Replace with your actual secret name

      - name: Clone private repository
        run: |
          git clone https://${{ github.actor }}:${{ secrets.PA_TOKEN }}@github.com/${{ env.PRIVATE_REPO }} private-repo
        shell: bash

      - name: Set version tag
        id: versioning
        run: |
          # If manual version input is provided, use it. Otherwise use short SHA.
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(git rev-parse --short HEAD)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build Docker image
        run: |
          IMAGE1=ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          IMAGE2=ghcr.io/${{ github.repository }}
          VERSION=${{ steps.versioning.outputs.version }}

          docker build -t $IMAGE1:$VERSION -t $IMAGE1:latest \
                       -t $IMAGE2:$VERSION -t $IMAGE2:latest ./private-repo

      - name: Push Docker images to GHCR ( Both organization and repo packages )
        run: |
          IMAGE1=ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          IMAGE2=ghcr.io/${{ github.repository }}
          VERSION=${{ steps.versioning.outputs.version }}

          docker push $IMAGE1:$VERSION
          docker push $IMAGE1:latest
          docker push $IMAGE2:$VERSION
          docker push $IMAGE2:latest
