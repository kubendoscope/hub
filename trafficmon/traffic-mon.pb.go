// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: proto/traffic-mon.proto

package trafficmon

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Address structure as defined in your Go struct
type UprobeAddressInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Family        uint32                 `protobuf:"varint,1,opt,name=family,proto3" json:"family,omitempty"`
	Saddr4        uint32                 `protobuf:"varint,2,opt,name=saddr4,proto3" json:"saddr4,omitempty"`
	Daddr4        uint32                 `protobuf:"varint,3,opt,name=daddr4,proto3" json:"daddr4,omitempty"`
	Saddr6        []byte                 `protobuf:"bytes,4,opt,name=saddr6,proto3" json:"saddr6,omitempty"` // 16 bytes
	Daddr6        []byte                 `protobuf:"bytes,5,opt,name=daddr6,proto3" json:"daddr6,omitempty"` // 16 bytes
	Sport         uint32                 `protobuf:"varint,6,opt,name=sport,proto3" json:"sport,omitempty"`  // uint16 in Go, but uint32 here to avoid wire truncation
	Dport         uint32                 `protobuf:"varint,7,opt,name=dport,proto3" json:"dport,omitempty"`  // same as above
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UprobeAddressInfo) Reset() {
	*x = UprobeAddressInfo{}
	mi := &file_proto_traffic_mon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UprobeAddressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UprobeAddressInfo) ProtoMessage() {}

func (x *UprobeAddressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_traffic_mon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UprobeAddressInfo.ProtoReflect.Descriptor instead.
func (*UprobeAddressInfo) Descriptor() ([]byte, []int) {
	return file_proto_traffic_mon_proto_rawDescGZIP(), []int{0}
}

func (x *UprobeAddressInfo) GetFamily() uint32 {
	if x != nil {
		return x.Family
	}
	return 0
}

func (x *UprobeAddressInfo) GetSaddr4() uint32 {
	if x != nil {
		return x.Saddr4
	}
	return 0
}

func (x *UprobeAddressInfo) GetDaddr4() uint32 {
	if x != nil {
		return x.Daddr4
	}
	return 0
}

func (x *UprobeAddressInfo) GetSaddr6() []byte {
	if x != nil {
		return x.Saddr6
	}
	return nil
}

func (x *UprobeAddressInfo) GetDaddr6() []byte {
	if x != nil {
		return x.Daddr6
	}
	return nil
}

func (x *UprobeAddressInfo) GetSport() uint32 {
	if x != nil {
		return x.Sport
	}
	return 0
}

func (x *UprobeAddressInfo) GetDport() uint32 {
	if x != nil {
		return x.Dport
	}
	return 0
}

// Represents the HTTP/2 frame header.
type FrameHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Length        int32                  `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Flags         uint32                 `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	StreamId      uint32                 `protobuf:"varint,4,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrameHeader) Reset() {
	*x = FrameHeader{}
	mi := &file_proto_traffic_mon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrameHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameHeader) ProtoMessage() {}

func (x *FrameHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_traffic_mon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameHeader.ProtoReflect.Descriptor instead.
func (*FrameHeader) Descriptor() ([]byte, []int) {
	return file_proto_traffic_mon_proto_rawDescGZIP(), []int{1}
}

func (x *FrameHeader) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *FrameHeader) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FrameHeader) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *FrameHeader) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

// Represents the decoded frame that has been reassembled.
type DecodedFrame struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId   string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Header         *FrameHeader           `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Payload        []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Incomplete     bool                   `protobuf:"varint,4,opt,name=incomplete,proto3" json:"incomplete,omitempty"`
	AdditionalInfo string                 `protobuf:"bytes,5,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"`
	IsGzip         bool                   `protobuf:"varint,6,opt,name=is_gzip,json=isGzip,proto3" json:"is_gzip,omitempty"`
	GzipData       string                 `protobuf:"bytes,7,opt,name=gzip_data,json=gzipData,proto3" json:"gzip_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DecodedFrame) Reset() {
	*x = DecodedFrame{}
	mi := &file_proto_traffic_mon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodedFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedFrame) ProtoMessage() {}

func (x *DecodedFrame) ProtoReflect() protoreflect.Message {
	mi := &file_proto_traffic_mon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedFrame.ProtoReflect.Descriptor instead.
func (*DecodedFrame) Descriptor() ([]byte, []int) {
	return file_proto_traffic_mon_proto_rawDescGZIP(), []int{2}
}

func (x *DecodedFrame) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *DecodedFrame) GetHeader() *FrameHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DecodedFrame) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *DecodedFrame) GetIncomplete() bool {
	if x != nil {
		return x.Incomplete
	}
	return false
}

func (x *DecodedFrame) GetAdditionalInfo() string {
	if x != nil {
		return x.AdditionalInfo
	}
	return ""
}

func (x *DecodedFrame) GetIsGzip() bool {
	if x != nil {
		return x.IsGzip
	}
	return false
}

func (x *DecodedFrame) GetGzipData() string {
	if x != nil {
		return x.GzipData
	}
	return ""
}

// Normalized address info
type NormalizedAddrInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrcIP         string                 `protobuf:"bytes,1,opt,name=srcIP,proto3" json:"srcIP,omitempty"`
	DstIP         string                 `protobuf:"bytes,2,opt,name=dstIP,proto3" json:"dstIP,omitempty"`
	SrcPort       int32                  `protobuf:"varint,3,opt,name=srcPort,proto3" json:"srcPort,omitempty"`
	DstPort       int32                  `protobuf:"varint,4,opt,name=dstPort,proto3" json:"dstPort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NormalizedAddrInfo) Reset() {
	*x = NormalizedAddrInfo{}
	mi := &file_proto_traffic_mon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NormalizedAddrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalizedAddrInfo) ProtoMessage() {}

func (x *NormalizedAddrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_traffic_mon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalizedAddrInfo.ProtoReflect.Descriptor instead.
func (*NormalizedAddrInfo) Descriptor() ([]byte, []int) {
	return file_proto_traffic_mon_proto_rawDescGZIP(), []int{3}
}

func (x *NormalizedAddrInfo) GetSrcIP() string {
	if x != nil {
		return x.SrcIP
	}
	return ""
}

func (x *NormalizedAddrInfo) GetDstIP() string {
	if x != nil {
		return x.DstIP
	}
	return ""
}

func (x *NormalizedAddrInfo) GetSrcPort() int32 {
	if x != nil {
		return x.SrcPort
	}
	return 0
}

func (x *NormalizedAddrInfo) GetDstPort() int32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

// Event structure matching your uprobeGoTlsEvent
type GoTlsEvent struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Goid               uint64                 `protobuf:"varint,1,opt,name=goid,proto3" json:"goid,omitempty"`
	TsNs               uint64                 `protobuf:"varint,2,opt,name=ts_ns,json=tsNs,proto3" json:"ts_ns,omitempty"`
	Fd                 uint32                 `protobuf:"varint,3,opt,name=fd,proto3" json:"fd,omitempty"`
	Pid                uint32                 `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	Tid                uint32                 `protobuf:"varint,5,opt,name=tid,proto3" json:"tid,omitempty"`
	AddressInfo        *UprobeAddressInfo     `protobuf:"bytes,6,opt,name=address_info,json=addressInfo,proto3" json:"address_info,omitempty"`
	DataLen            int32                  `protobuf:"varint,7,opt,name=data_len,json=dataLen,proto3" json:"data_len,omitempty"`
	EventType          uint32                 `protobuf:"varint,8,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Comm               string                 `protobuf:"bytes,9,opt,name=comm,proto3" json:"comm,omitempty"`  // Should be extracted from [16]int8
	Data               []byte                 `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"` // event.Data[0:event.DataLen]
	Uid                string                 `protobuf:"bytes,11,opt,name=uid,proto3" json:"uid,omitempty"`
	Node               string                 `protobuf:"bytes,12,opt,name=node,proto3" json:"node,omitempty"`
	NormalizedAddrInfo *NormalizedAddrInfo    `protobuf:"bytes,13,opt,name=normalized_addr_info,json=normalizedAddrInfo,proto3" json:"normalized_addr_info,omitempty"`
	ConnectionId       string                 `protobuf:"bytes,14,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Frames             []*DecodedFrame        `protobuf:"bytes,15,rep,name=frames,proto3" json:"frames,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GoTlsEvent) Reset() {
	*x = GoTlsEvent{}
	mi := &file_proto_traffic_mon_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoTlsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoTlsEvent) ProtoMessage() {}

func (x *GoTlsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_traffic_mon_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoTlsEvent.ProtoReflect.Descriptor instead.
func (*GoTlsEvent) Descriptor() ([]byte, []int) {
	return file_proto_traffic_mon_proto_rawDescGZIP(), []int{4}
}

func (x *GoTlsEvent) GetGoid() uint64 {
	if x != nil {
		return x.Goid
	}
	return 0
}

func (x *GoTlsEvent) GetTsNs() uint64 {
	if x != nil {
		return x.TsNs
	}
	return 0
}

func (x *GoTlsEvent) GetFd() uint32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *GoTlsEvent) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *GoTlsEvent) GetTid() uint32 {
	if x != nil {
		return x.Tid
	}
	return 0
}

func (x *GoTlsEvent) GetAddressInfo() *UprobeAddressInfo {
	if x != nil {
		return x.AddressInfo
	}
	return nil
}

func (x *GoTlsEvent) GetDataLen() int32 {
	if x != nil {
		return x.DataLen
	}
	return 0
}

func (x *GoTlsEvent) GetEventType() uint32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *GoTlsEvent) GetComm() string {
	if x != nil {
		return x.Comm
	}
	return ""
}

func (x *GoTlsEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoTlsEvent) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GoTlsEvent) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *GoTlsEvent) GetNormalizedAddrInfo() *NormalizedAddrInfo {
	if x != nil {
		return x.NormalizedAddrInfo
	}
	return nil
}

func (x *GoTlsEvent) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *GoTlsEvent) GetFrames() []*DecodedFrame {
	if x != nil {
		return x.Frames
	}
	return nil
}

// Acknowledgement from the server
type StreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamResponse) Reset() {
	*x = StreamResponse{}
	mi := &file_proto_traffic_mon_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse) ProtoMessage() {}

func (x *StreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_traffic_mon_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse.ProtoReflect.Descriptor instead.
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_traffic_mon_proto_rawDescGZIP(), []int{5}
}

func (x *StreamResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_proto_traffic_mon_proto protoreflect.FileDescriptor

const file_proto_traffic_mon_proto_rawDesc = "" +
	"\n" +
	"\x17proto/traffic-mon.proto\x12\atraffic\"\xb7\x01\n" +
	"\x11UprobeAddressInfo\x12\x16\n" +
	"\x06family\x18\x01 \x01(\rR\x06family\x12\x16\n" +
	"\x06saddr4\x18\x02 \x01(\rR\x06saddr4\x12\x16\n" +
	"\x06daddr4\x18\x03 \x01(\rR\x06daddr4\x12\x16\n" +
	"\x06saddr6\x18\x04 \x01(\fR\x06saddr6\x12\x16\n" +
	"\x06daddr6\x18\x05 \x01(\fR\x06daddr6\x12\x14\n" +
	"\x05sport\x18\x06 \x01(\rR\x05sport\x12\x14\n" +
	"\x05dport\x18\a \x01(\rR\x05dport\"l\n" +
	"\vFrameHeader\x12\x16\n" +
	"\x06length\x18\x01 \x01(\x05R\x06length\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x14\n" +
	"\x05flags\x18\x03 \x01(\rR\x05flags\x12\x1b\n" +
	"\tstream_id\x18\x04 \x01(\rR\bstreamId\"\xfa\x01\n" +
	"\fDecodedFrame\x12#\n" +
	"\rconnection_id\x18\x01 \x01(\tR\fconnectionId\x12,\n" +
	"\x06header\x18\x02 \x01(\v2\x14.traffic.FrameHeaderR\x06header\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\x12\x1e\n" +
	"\n" +
	"incomplete\x18\x04 \x01(\bR\n" +
	"incomplete\x12'\n" +
	"\x0fadditional_info\x18\x05 \x01(\tR\x0eadditionalInfo\x12\x17\n" +
	"\ais_gzip\x18\x06 \x01(\bR\x06isGzip\x12\x1b\n" +
	"\tgzip_data\x18\a \x01(\tR\bgzipData\"t\n" +
	"\x12NormalizedAddrInfo\x12\x14\n" +
	"\x05srcIP\x18\x01 \x01(\tR\x05srcIP\x12\x14\n" +
	"\x05dstIP\x18\x02 \x01(\tR\x05dstIP\x12\x18\n" +
	"\asrcPort\x18\x03 \x01(\x05R\asrcPort\x12\x18\n" +
	"\adstPort\x18\x04 \x01(\x05R\adstPort\"\xd3\x03\n" +
	"\n" +
	"GoTlsEvent\x12\x12\n" +
	"\x04goid\x18\x01 \x01(\x04R\x04goid\x12\x13\n" +
	"\x05ts_ns\x18\x02 \x01(\x04R\x04tsNs\x12\x0e\n" +
	"\x02fd\x18\x03 \x01(\rR\x02fd\x12\x10\n" +
	"\x03pid\x18\x04 \x01(\rR\x03pid\x12\x10\n" +
	"\x03tid\x18\x05 \x01(\rR\x03tid\x12=\n" +
	"\faddress_info\x18\x06 \x01(\v2\x1a.traffic.UprobeAddressInfoR\vaddressInfo\x12\x19\n" +
	"\bdata_len\x18\a \x01(\x05R\adataLen\x12\x1d\n" +
	"\n" +
	"event_type\x18\b \x01(\rR\teventType\x12\x12\n" +
	"\x04comm\x18\t \x01(\tR\x04comm\x12\x12\n" +
	"\x04data\x18\n" +
	" \x01(\fR\x04data\x12\x10\n" +
	"\x03uid\x18\v \x01(\tR\x03uid\x12\x12\n" +
	"\x04node\x18\f \x01(\tR\x04node\x12M\n" +
	"\x14normalized_addr_info\x18\r \x01(\v2\x1b.traffic.NormalizedAddrInfoR\x12normalizedAddrInfo\x12#\n" +
	"\rconnection_id\x18\x0e \x01(\tR\fconnectionId\x12-\n" +
	"\x06frames\x18\x0f \x03(\v2\x15.traffic.DecodedFrameR\x06frames\"(\n" +
	"\x0eStreamResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2R\n" +
	"\x10TrafficCollector\x12>\n" +
	"\fStreamEvents\x12\x13.traffic.GoTlsEvent\x1a\x17.traffic.StreamResponse(\x01B\x0eZ\f./trafficmonb\x06proto3"

var (
	file_proto_traffic_mon_proto_rawDescOnce sync.Once
	file_proto_traffic_mon_proto_rawDescData []byte
)

func file_proto_traffic_mon_proto_rawDescGZIP() []byte {
	file_proto_traffic_mon_proto_rawDescOnce.Do(func() {
		file_proto_traffic_mon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_traffic_mon_proto_rawDesc), len(file_proto_traffic_mon_proto_rawDesc)))
	})
	return file_proto_traffic_mon_proto_rawDescData
}

var file_proto_traffic_mon_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_traffic_mon_proto_goTypes = []any{
	(*UprobeAddressInfo)(nil),  // 0: traffic.UprobeAddressInfo
	(*FrameHeader)(nil),        // 1: traffic.FrameHeader
	(*DecodedFrame)(nil),       // 2: traffic.DecodedFrame
	(*NormalizedAddrInfo)(nil), // 3: traffic.NormalizedAddrInfo
	(*GoTlsEvent)(nil),         // 4: traffic.GoTlsEvent
	(*StreamResponse)(nil),     // 5: traffic.StreamResponse
}
var file_proto_traffic_mon_proto_depIdxs = []int32{
	1, // 0: traffic.DecodedFrame.header:type_name -> traffic.FrameHeader
	0, // 1: traffic.GoTlsEvent.address_info:type_name -> traffic.UprobeAddressInfo
	3, // 2: traffic.GoTlsEvent.normalized_addr_info:type_name -> traffic.NormalizedAddrInfo
	2, // 3: traffic.GoTlsEvent.frames:type_name -> traffic.DecodedFrame
	4, // 4: traffic.TrafficCollector.StreamEvents:input_type -> traffic.GoTlsEvent
	5, // 5: traffic.TrafficCollector.StreamEvents:output_type -> traffic.StreamResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_traffic_mon_proto_init() }
func file_proto_traffic_mon_proto_init() {
	if File_proto_traffic_mon_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_traffic_mon_proto_rawDesc), len(file_proto_traffic_mon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_traffic_mon_proto_goTypes,
		DependencyIndexes: file_proto_traffic_mon_proto_depIdxs,
		MessageInfos:      file_proto_traffic_mon_proto_msgTypes,
	}.Build()
	File_proto_traffic_mon_proto = out.File
	file_proto_traffic_mon_proto_goTypes = nil
	file_proto_traffic_mon_proto_depIdxs = nil
}
